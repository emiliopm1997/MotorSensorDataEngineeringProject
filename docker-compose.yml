version: '1'
services:
  kafka:
    container_name: 'kafka_server'
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - motor_sensor_network
  
  stream_generator:
    container_name: 'sg_container'
    build: ./stream_generator
    ports:
      - "5001:5001"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - motor_sensor_network
    volumes:
      - ./logs:/var/log/stream_generator

  data_handler:
    container_name: 'dh_container'
    build: ./data_handler
    ports:
      - "5002:5002"
    depends_on:
      - kafka
      - processors
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - motor_sensor_network
    volumes:
      - ./logs:/var/log/data_handler
      - ./data:/var/lib/data_handler/data

  credentials_validator:
    container_name: 'cv_container'
    build: ./credentials_validator
    ports:
      - "5003:5003"
    networks:
      - motor_sensor_network
  
  processors:
    container_name: 'proc_container'
    build: ./processors
    ports:
      - "5004:5004"
    networks:
      - motor_sensor_network
    volumes:
      - ./logs:/var/log/processors

  orchestrator:
    container_name: 'orchestrator_container'
    build: ./orchestrator
    ports:
      - "5000:5000"
    depends_on:
      - stream_generator
      - credentials_validator
      - data_handler
    networks:
      - motor_sensor_network
    volumes:
      - ./logs:/var/log/orchestrator

networks:
  motor_sensor_network:
    name: motor_sensor_network